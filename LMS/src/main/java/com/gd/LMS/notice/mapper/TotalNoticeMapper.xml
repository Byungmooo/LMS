<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.LMS.notice.mapper.TotalNoticeMapper">
	
		<sql id="searchDep">
		<!-- 부서별 키워드가 있을 때 -->
		<if test="searchType != ''"> AND department_code = #{searchType} </if>
	</sql>
	
	
	<sql id="search">
		<!-- 검색 키워드가 있을 때 -->
		<if test="keyword != null and keyword != ''">
			<choose>
				<!-- 검색 유형이 있을 때 -->
				<when test="searchType != null and searchType != ''">
					<choose>
						<when test="'title'.equals(searchType)"> AND notice_title LIKE CONCAT('%', #{keyword},
							'%') </when>
						<when test="'content'.equals(searchType)"> AND notice_content LIKE CONCAT('%', #{keyword},
							'%') </when>
						<when test="'writer'.equals(searchType)"> AND writer LIKE CONCAT('%', #{keyword}, '%')
						</when>
					</choose>
				</when>
				<!-- 전체 검색일 때 때 -->
				<otherwise> 
					AND ( 
					notice_title LIKE CONCAT('%', #{keyword}, '%') OR
					notice_content LIKE CONCAT('%', #{keyword}, '%') OR 
					writer LIKE CONCAT('%', #{keyword}, '%') 
					) 
				</otherwise>
			</choose>
		</if>
	</sql>

	<!-- 총 게시글 갯수 출력 -->
	<select id="countBoard"
		parameterType="map" resultType="int">
		SELECT COUNT(*) FROM total_notice 
			WHERE 1=1 
			<include refid="search" />
			AND department_code IS NOT NULL
	</select>

	<!-- 페이징 처리 후 게시글 조회 -->
	<select id="selectBoard" parameterType="map"
		resultType="com.gd.LMS.vo.TotalNotice">
	SELECT
		notice_no noticeNo,
		notice_title noticeTitle,
		department_code departmentCode,
		notice_content
		noticeContent,
		writer,
		views,
		create_date createDate,
		update_date updateDate
	FROM
		total_notice 
		
		WHERE 1=1
		<include refid="search" />
		AND department_code IS NULL
	ORDER BY
		notice_no
	LIMIT
		#{beginRow}, #{rowPerPage}
	</select>

	<!-- 전체공지사항 상세보기 -->
	<select id="selectTotalNoticeOne" parameterType="int" resultType="com.gd.LMS.vo.TotalNotice">
	SELECT 
		notice_no noticeNo, 
		department_code departmentCode,
		writer writer, 
		notice_title noticeTitle, 
		notice_content noticeContent,
		views views, 
		create_date createDate, 
		update_date updateDate 
	FROM
		total_notice 
	WHERE 
		notice_no = #{noticeNo}
	</select>

	<!-- 전체공지사항 추가 -->
	<insert id="addTotalNotice" parameterType="com.gd.LMS.vo.TotalNotice"> 
	INSERT INTO total_notice( 
		department_code,
		notice_title, 
		notice_content,
		writer, 
		create_date, 
		update_date 
	) VALUES ( 
	#{departmentCode},
		#{noticeTitle},
		#{noticeContent}, 
		#{writer}, 
		now(), 
		now() )
	</insert>

	<!-- 공지사항 조회수 증가 -->
	<update id="updateTotalNoticeCount" parameterType="com.gd.LMS.vo.TotalNotice">
	UPDATE 
		total_notice 
	SET 
		views = views + 1 
	WHERE
		notice_no = #{noticeNo}
	</update>

	<!-- 공지사항 수정 -->
	<update id="updateTotalNotice" parameterType="com.gd.LMS.vo.TotalNotice">
	UPDATE 
		total_notice 
	SET 
		notice_title = #{noticeTitle},
		notice_content = #{noticeContent}, 
		update_date = now() 
	WHERE 
		notice_no = #{noticeNo}
	</update>

	<!-- 공지사항 삭제 -->
	<delete id="deleteTotalNotice" parameterType="int"> 
	DELETE FROM
		total_notice
	WHERE 
		notice_no = #{noticeNo}
	</delete>


	<!-- 부서공지 학생 페이징 처리 후 게시글 조회 -->
	<select id="selectBoard2" parameterType="map" resultType="com.gd.LMS.vo.TotalNotice">
	SELECT
		notice_no noticeNo,
		notice_title noticeTitle,
		notice_content noticeContent,
		t.department_code departmentCode,
		writer,
		views,
		create_date createDate,
		update_date updateDate
	
	FROM total_notice t
	JOIN (
         SELECT department_code, student_code
         FROM student
         WHERE 1 = 1
         AND student_code = #{memberCode}
          ) s
      ON t.department_code = s.department_code
	<include refid="search" /> 
	ORDER BY
		notice_no
	LIMIT
		#{beginRow}, #{rowPerPage}
	</select>
	
	<select id="countBoard2"
		parameterType="map" resultType="int">
      SELECT COUNT(*)
      FROM total_notice t
      JOIN (
         SELECT department_code, student_code
         FROM student
         WHERE 1 = 1
         AND student_code = #{memberCode}
          ) s
      ON t.department_code = s.department_code
      WHERE 1=1
      <include refid="search" />
      AND t.department_code IS NOT NULL
	</select>	
	
	<!-- 부서공지 교수 페이징 처리 후 게시글 조회 -->

		<select id="selectBoard3" parameterType="map" resultType="com.gd.LMS.vo.TotalNotice">
	SELECT
		notice_no noticeNo,
		notice_title noticeTitle,
		notice_content noticeContent,
		t.department_code departmentCode,
		writer,
		views,
		create_date createDate,
		update_date updateDate
	
	FROM total_notice t
	JOIN (
	         SELECT department_code, professor_code
	         FROM professor
	         WHERE 1 = 1
	         AND professor_code = #{memberCode}
	          ) p
	      ON t.department_code = p.department_code
	<include refid="search" /> 
	ORDER BY
		notice_no
	LIMIT
		#{beginRow}, #{rowPerPage}
	</select>
	<select id="countBoard3"
		parameterType="map" resultType="int">
		SELECT COUNT(*) 
		FROM total_notice t
		JOIN (
	         SELECT department_code, professor_code
	         FROM professor
	         WHERE 1 = 1
	         AND professor_code = #{memberCode}
	          ) p
	      ON t.department_code = p.department_code
		<include refid="search" /> 
		 AND t.department_code IS NOT NULL
	</select>

	<!-- 부서공지 직원 페이징 처리 후 게시글 조회 -->
	<select id="selectBoard4" parameterType="map"
		resultType="com.gd.LMS.vo.TotalNotice">
	SELECT
		notice_no noticeNo,
		notice_title noticeTitle,
		department_code departmentCode,
		notice_content
		noticeContent,
		writer,
		views,
		create_date createDate,
		update_date updateDate
	FROM
		total_notice 
		
		WHERE 1=1
		<include refid="search" />
		<include refid="searchDep" />
		AND department_code IS NOT NULL
	ORDER BY
		notice_no
	LIMIT
		#{beginRow}, #{rowPerPage}
	</select>
	
	<select id="countBoard4"
		parameterType="map" resultType="int">
		SELECT COUNT(*) FROM total_notice 
			WHERE 1=1 
			<include refid="search" />
			<include refid="searchDep" />
			AND department_code IS NOT NULL
	</select>
	
	<!--  부서코드 -->
	<select id="selectTotalDepartmentName" resultType="map">
		SELECT
			department_code departmentCode,
			department_name departmentName
		FROM
			department
	</select>
	
	


</mapper>