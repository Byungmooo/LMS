<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.LMS.notice.mapper.LectureNoticeMapper">

	<!-- 게시글 검색 -->
	<sql id="search">
		<!-- 검색 키워드가 있을 때 -->
		<if test="keyword != null and keyword != ''">
			<choose>
				<!-- 검색 유형이 있을 때 -->
				<when test="searchType != null and searchType != ''">
					<choose>
						<when test="'title'.equals(searchType)">
							AND notice_title LIKE CONCAT('%', #{keyword}, '%')
						</when>
						<when test="'content'.equals(searchType)">
							AND notice_content LIKE CONCAT('%', #{keyword}, '%')
						</when>
						<when test="'writer'.equals(searchType)">
							AND writer LIKE CONCAT('%', #{keyword}, '%')
						</when>
					</choose>
				</when>
				<!-- 전체 검색일 때 때 -->
				<otherwise>
					AND ( notice_title LIKE CONCAT('%', #{keyword}, '%') OR notice_content
					LIKE CONCAT('%', #{keyword}, '%') OR writer LIKE CONCAT('%',
					#{keyword}, '%') )
				</otherwise>
			</choose>
		</if>
	</sql>

	<!-- 강의공지 목록 리스트 -->
	<select id="selectLectureNoticeList" parameterType="map" resultType="map">
		SELECT
			lec_notice_no lecNoticeNo,
			opened_lec_no openedLecNo,
			notice_title noticeTitle,
			notice_content noticeContent,
			views,
			writer,
			create_date createDate
		FROM 
			lecture_notice  
		WHERE
			opened_lec_no = #{openedLecNo}
			<include refid="search"/>
		ORDER BY 
			lec_notice_no
		LIMIT 
			#{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 강의공지 게시글수 -->
	<select id="selectLectureNoticeCount" parameterType="map" resultType="int">
		SELECT 
			COUNT(*) 
		FROM 
			lecture_notice 
		WHERE
			opened_lec_no = #{openedLecNo}
			<include refid="search" />
	</select>


	<!-- 강의공지 상세보기 -->
	<select id="selectLectureNoticeOne" parameterType="int" resultType="com.gd.LMS.vo.LectureNotice">
		SELECT
			lec_notice_no lecNoticeNo,
			opened_lec_no openedLecNo,
			notice_title noticeTitle,
			notice_content noticeContent,
			create_date createDate,
			update_date updateDate,
			views views,
			writer writer
		FROM
			lecture_notice
		WHERE
			lec_notice_no = #{lecNoticeNo}
	</select>
	
	<!-- 강의공지 조회수 증가 -->
	<update id="updateLectureNoticeViews" parameterType="int">
		UPDATE
			lecture_notice
		SET views = views + 1
		WHERE lec_notice_no = #{lecNoticeNo}
	</update>
	
	<!-- 증가된 조회수 적용 -->
	<select id="getLectureNoticeUpdateViews" parameterType="int" resultType="int">
		SELECT
			views
		FROM
			lecture_notice
		WHERE
			lec_notice_no = #{lecNoticeNo}
	</select>
	
	<!-- 강의공지 추가 -->
	<insert id="insertLectureNoticeOne" parameterType="com.gd.LMS.vo.LectureNotice">
		<selectKey resultType="int" keyProperty="lecNoticeNo" order="BEFORE">
			select MAX(lec_notice_no) + 1 from lecture_notice
		</selectKey>
		INSERT INTO lecture_notice(
			opened_lec_no,
			notice_title,
			notice_content,
			writer,
			create_date
		) VALUES (
			#{openedLecNo},
			#{noticeTitle},
			#{noticeContent},
			#{writer},
			now()
		)
	</insert>
	
	<!-- 공지사항 수정 -->
	<update id="updateLectureNoticeOne" parameterType="com.gd.LMS.vo.LectureNotice">
		UPDATE
			lecture_notice
		SET
			notice_title = #{noticeTitle},
			notice_content = #{noticeContent},
			update_date = now()
		WHERE 
			lec_notice_no = #{lecNoticeNo}
	</update>

	<!-- 공지사항 삭제 -->
	<delete id="deleteLectureNoticeOne" parameterType="int">
		DELETE FROM lecture_notice
		WHERE lec_notice_no = #{lecNoticeNo}
	</delete>
</mapper>