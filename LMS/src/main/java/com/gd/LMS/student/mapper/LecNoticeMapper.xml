<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.LMS.student.mapper.LecNoticeMapper">


    <!-- 전체공지사항 목록 리스트 -->
    <select id="selectLecNoticeList" resultType="com.gd.LMS.vo.LectureNotice">
		SELECT 
			lec_notice_no	 	lecNoticeNo,
			opened_lec_no  		openedLecNo,
			notice_title  	lecNoticeTitle,
			notice_content	lecNoticeContent,
			create_date 		createDate,
			update_date			updateDate,
			views	views,
			writer	 writer
		FROM
			lecture_notice 
	

    </select>
	
	    <!-- 전체공지사항 상세보기 -->
    <select id="selectLecNoticeOne" parameterType="int" resultType="com.gd.LMS.vo.LectureNotice">
        SELECT
  			lec_notice_no	 	lecNoticeNo,
			opened_lec_no  		openedLecNo,
			notice_title  	lecNoticeTitle,
			notice_content	lecNoticeContent,
			create_date 		createDate,
			update_date			updateDate,
			views	views,
			writer	 writer
        FROM
            lecture_notice 
        WHERE
            lec_notice_no = #{lecNoticeNo}
    </select>
	
	    <!-- 전체공지사항 추가 -->
    <insert id="addLecNotice" parameterType="com.gd.LMS.vo.LectureNotice">
        INSERT INTO lecture_notice(
       							opened_lec_no
                                 notice_title,
                                 notice_content,
                                 writer,
                                 create_date,
                                 update_date
                                 )
        VALUES (
        		#{openedLecNo}
                #{lecNoticeTitle},
                #{lecNoticeContent},
                #{writer},
                now(),
                now()
                )
    </insert>
	
    <!-- 공지사항 조회수 증가 -->
    <update id="updateLecNoticeCount" parameterType="com.gd.LMS.vo.LectureNotice">
        UPDATE
            lecture_notice
        SET views = views + 1
        WHERE lec_notice_no = #{lecNoticeNo}
    </update>
	
	
	    <!-- 공지사항 수정 -->
    <update id="updateLecNotice" parameterType="com.gd.LMS.vo.LectureNotice">
        UPDATE
            lecture_notice
        SET 
        	opened_lec_no	  = #{openedLecNo},
        	notice_title      = #{noticeTitle},
            notice_content    = #{noticeContent},
            update_date = now()
        WHERE lec_notice_no  = #{lecNoticeNo}
    </update>

    <!-- 공지사항 삭제 -->
    <delete id="deleteLecNotice" parameterType="int">
        DELETE
        FROM lecture_notice
        WHERE lec_notice_no = #{lecNoticeNo}
    </delete>
	
	
		<!--  게시글 검색  -->
	<sql id="search">
		<!--  검색 키워드가 있을 때  -->
		<if test="keyword != null and keyword != ''">
			<choose>
			<!--  검색 유형이 있을 때  -->
				<when test="searchType != null and searchType != ''">
					<choose>
						<when test="'title'.equals(searchType)"> 
							AND notice_title LIKE CONCAT('%', #{keyword}, '%') 
						</when>
						<when test="'content'.equals(searchType)"> 
							AND notice_content LIKE CONCAT('%', #{keyword}, '%') 
						</when>
						<when test="'writer'.equals(searchType)"> 
							AND writer LIKE CONCAT('%', #{keyword}, '%') 
						</when>
					</choose>
				</when>
				<!--  전체 검색일 때 때  -->
				<otherwise> 
					AND ( notice_title LIKE CONCAT('%', #{keyword}, '%') OR notice_content LIKE CONCAT('%', #{keyword}, '%') OR writer LIKE CONCAT('%', #{keyword}, '%') ) 
				</otherwise>
			</choose>
		</if>
	</sql>

	<!-- 총 게시글 갯수 출력 -->
	<select id="countBoard" parameterType="com.gd.LMS.utils.PagingVo" resultType="int">
		SELECT COUNT(*) FROM lecture_notice WHERE 1=1 <include refid="search"/>
	</select>
	
	<!-- 페이징 처리 후 게시글 조회 -->
	<select id="selectBoard" parameterType="com.gd.LMS.utils.PagingVo" resultType="com.gd.LMS.vo.LectureNotice">
		SELECT
				lec_notice_no	 	lecNoticeNo,
			opened_lec_no  		openedLecNo,
			notice_title  	lecNoticeTitle,
			notice_content	lecNoticeContent,
			create_date 		createDate,
			update_date			updateDate,
			views	views,
			writer	 writer
		FROM 
			lecture_notice
		WHERE
			1=1 <include refid="search"/>
		ORDER BY 
			lec_notice_no
		LIMIT 
			#{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 상세보기 -->
	<select id="selectNoticeOne"  parameterType="int" resultType="com.gd.LMS.vo.LectureNotice">
		SELECT
			lec_notice_no	 	lecNoticeNo,
			opened_lec_no  		openedLecNo,
			notice_title  	lecNoticeTitle,
			notice_content	lecNoticeContent,
			create_date 		createDate,
			update_date			updateDate,
			views	views,
			writer	 writer
		FROM 
			lecture_notice
		WHERE
			lec_notice_no = #{lecNoticeNo}
	</select>
	
	<!-- 추가 -->
	<insert id="insertNotice" parameterType="com.gd.LMS.vo.LectureNotice">
		INSERT INTO lecture_notice (
		opened_lec_no,
			notice_title,
			notice_content,
			writer,
			create_date	
		) VALUES (
			#{openedLecNo},
			#{noticeTitle},
			#{noticeContent},
			#{writer},
			NOW()
		)
		
		<selectKey keyProperty="lecNoticeNo" resultType="int" order="AFTER">
	        SELECT MAX(lecNoticeNo) FROM lecture_notice
	    </selectKey>		
	</insert>
	
</mapper>