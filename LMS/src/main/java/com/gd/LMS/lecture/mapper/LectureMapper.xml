<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.LMS.lecture.mapper.LectureMapper">
	
	<!-- 검색 키워드가 있을 때 -->
	<sql id="search">
		<if test="keyword != null and keyword != ''"> AND lecture_name LIKE CONCAT('%', #{keyword},'%') </if>
	</sql>
	
	<!-- 학생수강리스트 -->
	<select id="selectStudentLectureList" parameterType="int" resultType="map"> 
		SELECT 
			o.opened_lec_no openedLecNo, 
			t.lecture_name lectureName, 
			m.member_name professorName, 
			t.lecture_type lectureType, 
			t.credit 
		FROM 
			total_lecture t, 
			opened_lecture o, 
			student_lecture s,
			professor p, 
			member m 
		WHERE 
			t.lecture_code = o.lecture_code AND
			o.opened_lec_no = s.opened_lec_no AND 
			p.professor_code = o.professor_code AND 
			p.member_id = m.member_id AND 
			student_code = #{studentCode} 
	</select>
	
	<!-- 교수진행강의리스트 -->
	<select id="selectProfessorLectureList" parameterType="int" resultType="map">
		SELECT 
			o.opened_lec_no openedLecNo, 
			t.lecture_name lectureName, 
			(SELECT COUNT(*) FROM student_lecture WHERE opened_lec_no = o.opened_lec_no) currentStudentNum,
			o.open_lecture_date openLectureDate,
			o.close_lecture_date closeLectureDate
		FROM 
			total_lecture t, 
			opened_lecture o
		WHERE 
			t.lecture_code = o.lecture_code AND
			o.professor_code = #{professorCode}
	</select>
	
	<!-- 강의상세보기 -->
	<select id="selectOpenedLectureOne" parameterType="int" resultType="map"> 
		SELECT 
			m.member_name professorName, 
			t.lecture_type lectureType, 
			t.lecture_name lectureName, 
			t.credit, 
			d.department_name departmentName, 
			SUBSTRING(o.open_lecture_date,1,4) lectureYear, 
			(CASE
				WHEN CAST(SUBSTRING(open_lecture_date,6,2) AS unsigned)>=8 
				THEN 2 ELSE 1 
			END) AS lectureSemester, 
			b.building_name buildingName,
			c.classroom_name classroomName,
			o.student_num studentNum, 
			o.syllabus, 
			o.opened_lec_no openedLecNo
		FROM
			opened_lecture o, 
			total_lecture t, 
			department d, 
			professor p, 
			member m,
			building b,
			classroom c
		WHERE 
			o.lecture_code = t.lecture_code AND 
			t.department_code = d.department_code AND 
			o.professor_code = p.professor_code AND
			p.member_id = m.member_id AND
			b.building_no = c.building_no AND
			o.classroom_no = c.classroom_no AND
			opened_lec_no = #{openedLecNo}
	</select>
	
	

</mapper>