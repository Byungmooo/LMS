<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.LMS.lecture.mapper.LectureMapper">
	<!-- 학생수강리스트 -->
	<select id="selectStudentLectureList" parameterType="int" resultType="map">
		SELECT
			o.opened_lec_no openedLecNo,
			t.lecture_name lectureName,
			m.member_name professorName,
			t.lecture_type lectureType,
			t.credit
		FROM
			total_lecture t,
			opened_lecture o,
			student_lecture s,
			professor p,
			member m
		WHERE
			t.lecture_code = o.lecture_code AND
			o.opened_lec_no = s.opened_lec_no AND
			p.professor_code = o.professor_code AND
			p.member_id = m.member_id AND
			student_code = #{studentCode}		
	</select>
	
	<!-- 학생수강상세보기 -->
	<select id="selectOpenedLectureOne" parameterType="int" resultType="map">
		SELECT
			m.member_name professorName,
			t.lecture_type lectureType,
			t.lecture_name lectureName,
			t.credit,
			d.department_name departmentName,
			SUBSTRING(o.open_lecture_date,1,4) lectureYear,
			(CASE WHEN CAST(SUBSTRING(open_lecture_date,6,2) AS unsigned)>=8 THEN 2
					ELSE 1
			END) AS lectureSemester,
			o.lec_classroom lecClassroom,
			o.student_num studentNum,
			o.syllabus,
			o.opened_lec_no openedLecNo
		FROM
			opened_lecture o,
			total_lecture t,
			department d,
			professor p,
			member m
		WHERE
			o.lecture_code = t.lecture_code AND
			t.department_code = d.department_code AND
			o.professor_code = p.professor_code AND
			p.member_id = m.member_id AND
			opened_lec_no = #{openedLecNo}
	</select>
	
	<select id="selectLectureQuestionList" parameterType="int" resultType="com.gd.LMS.vo.LectureQuestion">
		SELECT
			lec_question_no lecQuestionNo,
			opened_lec_no openedLecNo,
			notice_title noticeTitle,
			writer,
			answer_y answerY,
			create_date createDate
		FROM
			lecture_question
		WHERE
			opened_lec_no = #{openedLecNo}
	</select>
	
	<select id="selectLectureQuestionOne" parameterType="int" resultType="map">
		SELECT
			q.lec_question_no lecQuestionNo,
			t.lecture_name lectureName,
			o.opened_lec_no openedLecNo,
			q.notice_title noticeTitle,
			q.notice_content noticeContent,
			q.writer,
			q.answer_y answerY,
			q.create_date createDate
		FROM
			lecture_question q,
			opened_lecture o,
			total_lecture t
		WHERE
			q.opened_lec_no = o.opened_lec_no AND
			o.lecture_code = t.lecture_code AND
			lec_question_no = #{lecQuestionNo}
	</select>
	
	<!-- 학생수강신청 전체리스트 -->
	<select id="selectTotalLectureList" parameterType="com.gd.LMS.utils.PagingVo" resultType="map">
		SELECT 
			o.opened_lec_no openedLecNo,
			t.lecture_code lectureCode,
			t.lecture_name lectureName,
			m.member_name memberName,
			t.credit credit
		FROM 
			total_lecture t,
			opened_lecture o,
			professor p,
			member m
		WHERE
			t.lecture_code = o.lecture_code AND 
			o.professor_code = p.professor_code AND 
			p.member_id = m.member_id
		ORDER BY 
			t.lecture_code
		LIMIT 
			#{beginRow}, #{rowPerPage}
	</select>
	
	<insert id="insertStudentLecture" parameterType="java.util.List">
		INSERT INTO student_lecture ( 
			student_code, 
			opened_lec_no, 
			create_date 
		) VALUES
		<foreach collection="list" item="item" index="index" separator=","> 
		( 
			#{item.studentCode}, 
			#{item.openedLecNo}, 
			NOW() 
		) 
		</foreach>
	</insert>
	
	<!-- 학생수강신청 장바구니 -->
	<select id="selectStudentLectureCartList" resultType="map">
		SELECT
			s.cart_no cartNo,
			o.opened_lec_no openedLecNo,
			t.lecture_code lectureCode,
			t.lecture_name lectureName,
			t.credit
		FROM
			total_lecture t,
			opened_lecture o,
			student_lecture_cart s
		WHERE
			t.lecture_code = o.lecture_code AND
			o.opened_lec_no = s.opened_lec_no 
			
			<!-- AND s.student_code = 20122001 -->
	</select>
	
	<select id="selectTotalLectureCount" resultType="int">
		SELECT
			COUNT(*)
		FROM
			total_lecture
	</select>
	
	<!-- 학생수강담기 -->
	<insert id="studentCartInsert" parameterType="map">
		INSERT INTO student_lecture_cart (
			student_code,
			opened_lec_no,
			create_date
		) VALUES (
			#{studentCode},
			#{openedLecNo},
			NOW()
		)	
	</insert>
	
	<delete id="studentCartDelete" parameterType="String">
		DELETE FROM student_lecture_cart
		WHERE cart_no = #{cartNo}
	</delete>
	
	<delete id="deleteStudentLectureCart" parameterType="String">
		DELETE FROM student_lecture_cart
		WHERE student_code = #{studenCode}
	</delete>
</mapper>