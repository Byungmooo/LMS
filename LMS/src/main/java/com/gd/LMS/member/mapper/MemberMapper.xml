<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.LMS.member.mapper.MemberMapper">

	<sql id="tempDepName">
		<!-- 학부가 키워드가 있을 때 -->
		<if test="tempDep != ''"> temp_dep, </if>
	</sql>
	<sql id="tempDepValue">
		<!-- 학부가 키워드가 있을 때 -->
		<if test="tempDep != ''"> #{tempDep}, </if>
	</sql>
	<sql id="search">
		<!-- 서치 키워드가 키워드가 있을 때 -->
		<if test="searchType != ''">
			<if test="searchType == '학생'"> AND member_type = '학생' </if>
			<if test="searchType == '교수'"> AND member_type = '교수' </if>
			<if test="searchType == '직원'"> AND member_type = '직원' </if>
		</if>
	</sql>
	
	<!-- 로그인 -->
	<select id="selectMemberLogin" parameterType="com.gd.LMS.vo.Member" resultType="com.gd.LMS.vo.Member">
		SELECT 
			member_id memberId, 
			member_pw memberPw,
			member_name memberName, 
			member_type memberType, 
			active 
		FROM 
			member 
		WHERE 
			member_id = #{memberId} AND 
			member_pw = #{memberPw}
	</select>
	
	<!-- 전체부서리스트 -->
	<select id="selectTempDepList" resultType="map">
		SELECT
			department_code departmentCode,
			department_name departmentName
		FROM
			department
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertMemberRegister" parameterType="com.gd.LMS.vo.Member">
		INSERT INTO member (
			member_id,
			member_pw,
			member_name,
			member_gender,
			member_type,
			member_birth,
			member_email,
			member_address,
			member_contact,
			<include refid="tempDepName" />
			create_date
		) VALUES (
			#{memberId},
			PASSWORD(#{memberPw}),
			#{memberName},
			#{memberGender},
			#{memberType},
			#{memberBirth},
			#{memberEmail},
			#{memberAddress},
			#{memberContact},
			<include refid="tempDepValue" />
			NOW()
		)
	</insert>
	
	<!-- 회원가입 중복체크 -->
	<select id="selectMemberIdCheck" resultType="string" parameterType="string">
		SELECT
			member_id memberId
		FROM member
		WHERE
			member_id = #{memberId}
	</select>
	
	<!-- 최근접속 갱신 -->
	<update id="updateMemberLastLogin" parameterType="string">
		UPDATE 
			member
		SET 
			last_login = NOW()
		WHERE 
			member_id = #{memberId}
	</update>
	
	<!-- 최근 접속일이 90일 이후면 휴면계정처리  스피링 스케쥴러 설정으로 호출-->
	<update id="updateMemberActiveN">
		UPDATE 
			member
		SET 
			active = 'N'
		WHERE 
			DATEDIFF(NOW(), last_login) > 90 AND active = 'Y'
	</update>
	
	<!-- 휴면계정 잠금 해제 -->
	<update id="updateMemberActiveY" parameterType="com.gd.LMS.vo.Member">
		UPDATE 
			member
		SET 
			active = 'Y'
		WHERE 
			member_id = #{memberId} AND
			member_pw = PASSWORD(#{memberPw}) AND
			member_name = #{memberName} AND
			member_birth = #{memberBirth} AND
			member_gender = #{memberGender} AND
			member_email = #{memberEmail} AND 
			active = 'N'
			<!-- active = 'W' 도 같은 메서드? -->
	</update>
	
	<!--  학생코드  -->
	<select id="selectStudentCodeById" parameterType="String" resultType="com.gd.LMS.vo.Student"> 
	SELECT 
		student_code studentCode, 
		department_code departmentCode 
	FROM 
		student 
	WHERE 
		member_id = #{memberId} 
	</select>
	
	<!--  교수코드  -->
	<select id="selectProfessorCodeById" parameterType="String" resultType="com.gd.LMS.vo.Professor"> 
	SELECT 
		professor_code professorCode, 
		department_code departmentCode 
	FROM 
		professor 
	WHERE 
		member_id = #{memberId} 
	</select>
	
	
	<!--  직원코드  -->
	<select id="selectEmployeeCodeById" parameterType="String" resultType="com.gd.LMS.vo.Employee"> 
	SELECT 
		employee_code employeeCode 
	FROM 
		employee 
	WHERE 
		member_id = #{memberId} 
	</select>
	
	<select id="selectDepNameByStudent" parameterType="int" resultType="String">
		SELECT
			d.department_name
		FROM
			student s,
			department d
		WHERE
			s.department_code = d.department_code AND
			s.student_code = #{memberCode}
	</select>
	
	<select id="selectDepNameByProfessor" parameterType="int" resultType="String">
		SELECT
			d.department_name
		FROM
			professor p,
			department d
		WHERE
			p.department_code = d.department_code AND
			p.professor_code = #{memberCode}	
	</select>
	
	<select id="selectEmpLevelByEmployee" parameterType="int" resultType="String">
		SELECT
			authority
		FROM
			employee
		WHERE
			employee_code = #{memberCode}
	</select>
	
	<!-- ////////////////////////////////////////////////////// -->
	<!-- 회원가입 교수 승인대기리스트 -->
	<select id="selectQueueLsit" resultType="com.gd.LMS.vo.Member" parameterType="String">
		SELECT
			member_id memberId,
			member_name memberName,
			member_gender memberGender,
			member_birth memberBirth,
			member_type memberType,
			member_email memberEmail,
			member_address memberAddress,
			member_contact memberContact,
			temp_dep tempDep		
		FROM
			member
		WHERE
			active = 'W'
			<include refid="search" />
	</select>
	
	<!-- 회원가입 승인 -->
	<update id="updateActiveMember" parameterType="String">
		UPDATE 
			member
		SET 
			active = 'Y'
		WHERE 
			member_id = #{memberId} 
			
	</update>
	
	
	
	<!-- 회원가입 거절 -->
	<update id="updateInActiveMember" parameterType="String">
		UPDATE 
			member
		SET 
			active = 'N'
		WHERE 
			member_id = #{memberId}
	</update>
	
	
</mapper>