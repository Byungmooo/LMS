<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.LMS.assignment.mapper.AssignmentMapper">
<!-- 게시글 검색 -->
	<sql id="search">
		<!-- 검색 키워드가 있을 때 -->
		<if test="keyword != null and keyword != ''">
			<choose>
				<!-- 검색 유형이 있을 때 -->
				<when test="searchType != null and searchType != ''">
					<choose>
						<when test="'title'.equals(searchType)">
							AND assignment_title LIKE CONCAT('%', #{keyword}, '%')
						</when>
						<when test="'content'.equals(searchType)">
							AND assignment_content LIKE CONCAT('%', #{keyword}, '%')
						</when>
						<when test="'no'.equals(searchType)">
							AND opened_lec_no LIKE CONCAT('%', #{keyword}, '%')
						</when>
					</choose>
				</when>
				<!-- 전체 검색일 때 때 -->
				<otherwise>
					AND ( assignment_title LIKE CONCAT('%', #{keyword}, '%') OR 
						assignment_content	LIKE CONCAT('%', #{keyword}, '%') OR 
						opened_lec_no LIKE CONCAT('%',	#{keyword}, '%') )
				</otherwise>
			</choose>
		</if>
	</sql>

	<!-- 전체 과제 리스트 조회하기 -->
	<select id="selectAssignmentList" parameterType="map" resultType="map">
		SELECT
			assignment_no assignmentNo, 
			opened_lec_no openedLecNo, 
			assignment_title assignmentTitle,
			assignment_content assignmentContent, 
			end_date endDate, 
			update_date updateDate, 
			create_date createDate
		FROM 
			assignment
		WHERE
			opened_lec_no = #{openedLecNo}
			<include refid="search"/>
		ORDER BY 
			end_date ASC
		LIMIT 
			#{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 전체 과제 게시글수 -->
	<select id="selectAssignmentCount" parameterType="map" resultType="int">
		SELECT 
			COUNT(*) 
		FROM 
			assignment 
		WHERE
			opened_lec_no = #{openedLecNo}
			<include refid="search" />
	</select>
	
	<!-- 출제한 과제 상세보기 -->
	<select id="selectAssignmentOne" parameterType="int" resultType="map">
		SELECT
			assignment_no assignmentNo, 
			opened_lec_no openedLecNo, 
			assignment_title assignmentTitle,
			assignment_content assignmentContent, 
			end_date endDate
		FROM 
			assignment
		WHERE
			assignment_no = #{assignmentNo}
	</select>


	<!-- 과제 출제하기-->
	<insert id="insertAssignment" parameterType="com.gd.LMS.vo.Assignment">
		<selectKey resultType="int" keyProperty="assignmentNo" order="BEFORE">
			select MAX(assignment_no) + 1 from assignment
		</selectKey>
		INSERT INTO assignment(
				assignment_no,
				opened_lec_no, 
				assignment_title, 
				assignment_content, 
				end_date, 
				create_date,
				update_date 
				)
				VALUES (
				#{assignmentNo},
				#{openedLecNo},
				#{assignmentTitle}, 
				#{assignmentContent},
				#{endDate},
				now(),
				now()
				)
	</insert>
	

	<!-- 출제한 과제 수정하기 -->
	<update id="updateAssignment" parameterType="com.gd.LMS.vo.Assignment">
		UPDATE 
			assignment 
		SET
			assignment_title = #{assignmentTitle}, 
			assignment_content = #{assignmentContent},
			end_date = #{endDate}, 
			update_date = now()
		WHERE 
			assignment_no = #{assignmentNo}
	</update>
	

	<!-- 과제 삭제하기 -->
	<delete id="deleteAssignment" parameterType="int">
		DELETE FROM assignment 
		WHERE assignment_no = #{assignmentNo}
	</delete>
		
		
		
	<!-- 제출한 과제 점수 수정하기 -->
	<update id="updateAssignmentRegScore" parameterType="map">
		UPDATE
			assignment_reg
		SET 
			assignment_score = #{assignmentScore}
		WHERE
			assignment_no = #{assignmentNo}
	</update>
	<!-- 제출한 과제 점수 수정하기 -->
	
</mapper>