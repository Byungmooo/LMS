<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.LMS.assignment.mapper.AssignmentRegMapper">
<!-- 게시글 검색 -->
	<sql id="search">
		<!-- 검색 키워드가 있을 때 -->
		<if test="keyword != null and keyword != ''">
			<choose>
				<!-- 검색 유형이 있을 때 -->
				<when test="searchType != null and searchType != ''">
					<choose>
						<when test="'title'.equals(searchType)">
							AND r.assignment_reg_title LIKE CONCAT('%', #{keyword}, '%')
						</when>
						<when test="'content'.equals(searchType)">
							AND r.assignment_reg_content LIKE CONCAT('%', #{keyword}, '%')
						</when>
						<when test="'no'.equals(searchType)">
							AND r.assignment_reg_no LIKE CONCAT('%', #{keyword}, '%')
						</when>
					</choose>
				</when>
				<!-- 전체 검색일 때 때 -->
				<otherwise>
					AND ( r.assignment_reg_title LIKE CONCAT('%', #{keyword}, '%') OR 
						r.assignment_reg_content	LIKE CONCAT('%', #{keyword}, '%') OR 
						r.assignment_reg_no LIKE CONCAT('%', #{keyword}, '%') )
				</otherwise>
			</choose>
		</if>
	</sql>

<!--전체 제출한 과제 리스트 조회 메소드 -->
	<select id="selectAssignmentRegList"  parameterType="map" resultType="map">
		SELECT
			a.opened_lec_no	openedLecNo,
			r.assignment_reg_no assignmentRegNo,
			r.assignment_no assignmentNo,
			r.assignment_reg_title assignmentRegTitle,
			r.assignment_reg_content assignmentRegContent,
			r.assignment_score	assignmentScore,
			r.create_date createDate
		FROM 
			 assignment_reg r LEFT OUTER JOIN  assignment a 
		ON	
			a.assignment_no = r.assignment_no 
		WHERE
			a.opened_lec_no = 1 
			<include refid="search"/>
		ORDER BY 
			r.create_date DESC
		LIMIT 
			#{beginRow}, #{rowPerPage}
	</select>

	<!-- 전체 제출 과제수 -->
	<select id="selectAssignmentRegCount" parameterType="map" resultType="int">
		SELECT 
			COUNT(*) 
		FROM 
			assignment_reg r LEFT OUTER JOIN  assignment a 
		ON	
			a.assignment_no = r.assignment_no 
		WHERE
			a.opened_lec_no = #{openedLecNo} 
			<include refid="search" />
	</select>
	

	<!-- 제출한 과제 상세보기 -->
	<select id="selectAssignmentRegOne" parameterType="map" resultType="map">
		SELECT
			r.assignment_reg_no assignmentRegNo,
			r.assignment_no assignmentNo,
			r.assignment_reg_title assignmentRegTitle,
			r.assignment_reg_content assignmentRegContent,
			r.assignment_score	assignmentScore,
			r.create_date createDate,
			i.origin_name originName,
			i.file_name fileName
		FROM 
			 assignment_reg r LEFT OUTER JOIN  assignment_reg_img i 
		ON	
			r.assignment_reg_no = i.assignment_reg_no
		WHERE
			r.assignment_no = #{assignmentNo} 
			<include refid="search" />
		<!-- img랑 join -->
	</select>
	
	
	<!-- 과제 제출하기 메소드 -->
	<insert id="insertAssignmentReg" 
			parameterType="com.gd.LMS.vo.AssignmentReg">
		<selectKey resultType="int" keyProperty="assignmentRegNo" order="BEFORE">
			select MAX(assignment_reg_no) + 1 from assignment_reg
		</selectKey>
		INSERT INTO 
			assignment_reg(
						assignment_no,
						student_lec_no,
						assignment_reg_title,
						assignment_reg_content,
						update_date, 
						create_date							
						)
						VALUES (
						#{assignmentNo},
						#{studentLecNo},
						#{assignmentRegTitle},
						#{assignmentRegContent},
						NOW(),
						NOW()
					)
	</insert>

	<!-- 학생강의코드 -->
	<select id="selectStudentLectureNo" parameterType="map" resultType="int">
		SELECT
			student_lec_no studentLecNo
		FROM
			student_lecture
		WHERE
			student_code = #{studentCode} AND
			opened_lec_no = #{openedLecNo}
	</select>
	



	<!-- 제출한 과제 수정하기  -->
	<update id="updateAssignmentReg" parameterType="com.gd.LMS.vo.AssignmentReg">
		UPDATE 
			assignment_reg 
		SET 
			assignment_reg_title = #{assignmentRegTitle},
			assignment_reg_content = #{assignmentRegContent},
			update_date= now()
		WHERE
			assignment_reg_no = #{assignmentRegNo}
	</update>


	<!-- 제출한 과제 삭제하기 -->
	<delete id="deleteAssignmentReg" parameterType="int">
		DELETE FROM
			assignment_reg
		WHERE 
			assignment_reg_no = #{assignmentRegNo}
	</delete>



</mapper>